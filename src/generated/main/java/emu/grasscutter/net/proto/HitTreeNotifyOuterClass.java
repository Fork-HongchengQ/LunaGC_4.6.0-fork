// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: HitTreeNotify.proto

package emu.grasscutter.net.proto;

public final class HitTreeNotifyOuterClass {
  private HitTreeNotifyOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface HitTreeNotifyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:HitTreeNotify)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.Vector tree_pos = 10;</code>
     * @return Whether the treePos field is set.
     */
    boolean hasTreePos();
    /**
     * <code>.Vector tree_pos = 10;</code>
     * @return The treePos.
     */
    VectorOuterClass.Vector getTreePos();
    /**
     * <code>.Vector tree_pos = 10;</code>
     */
    VectorOuterClass.VectorOrBuilder getTreePosOrBuilder();

    /**
     * <code>.Vector drop_pos = 12;</code>
     * @return Whether the dropPos field is set.
     */
    boolean hasDropPos();
    /**
     * <code>.Vector drop_pos = 12;</code>
     * @return The dropPos.
     */
    VectorOuterClass.Vector getDropPos();
    /**
     * <code>.Vector drop_pos = 12;</code>
     */
    VectorOuterClass.VectorOrBuilder getDropPosOrBuilder();

    /**
     * <code>uint32 tree_type = 4;</code>
     * @return The treeType.
     */
    int getTreeType();
  }
  /**
   * <pre>
   *4.6.0
   * CmdId: 3983
   * Obf: MKMLOPMNMBP
   * </pre>
   *
   * Protobuf type {@code HitTreeNotify}
   */
  public static final class HitTreeNotify extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:HitTreeNotify)
      HitTreeNotifyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use HitTreeNotify.newBuilder() to construct.
    private HitTreeNotify(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HitTreeNotify() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new HitTreeNotify();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private HitTreeNotify(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 32: {

              treeType_ = input.readUInt32();
              break;
            }
            case 82: {
              VectorOuterClass.Vector.Builder subBuilder = null;
              if (treePos_ != null) {
                subBuilder = treePos_.toBuilder();
              }
              treePos_ = input.readMessage(VectorOuterClass.Vector.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(treePos_);
                treePos_ = subBuilder.buildPartial();
              }

              break;
            }
            case 98: {
              VectorOuterClass.Vector.Builder subBuilder = null;
              if (dropPos_ != null) {
                subBuilder = dropPos_.toBuilder();
              }
              dropPos_ = input.readMessage(VectorOuterClass.Vector.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dropPos_);
                dropPos_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return HitTreeNotifyOuterClass.internal_static_HitTreeNotify_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return HitTreeNotifyOuterClass.internal_static_HitTreeNotify_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              HitTreeNotify.class, Builder.class);
    }

    public static final int TREE_POS_FIELD_NUMBER = 10;
    private VectorOuterClass.Vector treePos_;
    /**
     * <code>.Vector tree_pos = 10;</code>
     * @return Whether the treePos field is set.
     */
    @Override
    public boolean hasTreePos() {
      return treePos_ != null;
    }
    /**
     * <code>.Vector tree_pos = 10;</code>
     * @return The treePos.
     */
    @Override
    public VectorOuterClass.Vector getTreePos() {
      return treePos_ == null ? VectorOuterClass.Vector.getDefaultInstance() : treePos_;
    }
    /**
     * <code>.Vector tree_pos = 10;</code>
     */
    @Override
    public VectorOuterClass.VectorOrBuilder getTreePosOrBuilder() {
      return getTreePos();
    }

    public static final int DROP_POS_FIELD_NUMBER = 12;
    private VectorOuterClass.Vector dropPos_;
    /**
     * <code>.Vector drop_pos = 12;</code>
     * @return Whether the dropPos field is set.
     */
    @Override
    public boolean hasDropPos() {
      return dropPos_ != null;
    }
    /**
     * <code>.Vector drop_pos = 12;</code>
     * @return The dropPos.
     */
    @Override
    public VectorOuterClass.Vector getDropPos() {
      return dropPos_ == null ? VectorOuterClass.Vector.getDefaultInstance() : dropPos_;
    }
    /**
     * <code>.Vector drop_pos = 12;</code>
     */
    @Override
    public VectorOuterClass.VectorOrBuilder getDropPosOrBuilder() {
      return getDropPos();
    }

    public static final int TREE_TYPE_FIELD_NUMBER = 4;
    private int treeType_;
    /**
     * <code>uint32 tree_type = 4;</code>
     * @return The treeType.
     */
    @Override
    public int getTreeType() {
      return treeType_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (treeType_ != 0) {
        output.writeUInt32(4, treeType_);
      }
      if (treePos_ != null) {
        output.writeMessage(10, getTreePos());
      }
      if (dropPos_ != null) {
        output.writeMessage(12, getDropPos());
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (treeType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, treeType_);
      }
      if (treePos_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getTreePos());
      }
      if (dropPos_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getDropPos());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof HitTreeNotify)) {
        return super.equals(obj);
      }
      HitTreeNotify other = (HitTreeNotify) obj;

      if (hasTreePos() != other.hasTreePos()) return false;
      if (hasTreePos()) {
        if (!getTreePos()
            .equals(other.getTreePos())) return false;
      }
      if (hasDropPos() != other.hasDropPos()) return false;
      if (hasDropPos()) {
        if (!getDropPos()
            .equals(other.getDropPos())) return false;
      }
      if (getTreeType()
          != other.getTreeType()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTreePos()) {
        hash = (37 * hash) + TREE_POS_FIELD_NUMBER;
        hash = (53 * hash) + getTreePos().hashCode();
      }
      if (hasDropPos()) {
        hash = (37 * hash) + DROP_POS_FIELD_NUMBER;
        hash = (53 * hash) + getDropPos().hashCode();
      }
      hash = (37 * hash) + TREE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getTreeType();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static HitTreeNotify parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static HitTreeNotify parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static HitTreeNotify parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static HitTreeNotify parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static HitTreeNotify parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static HitTreeNotify parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static HitTreeNotify parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static HitTreeNotify parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static HitTreeNotify parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static HitTreeNotify parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static HitTreeNotify parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static HitTreeNotify parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(HitTreeNotify prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *4.6.0
     * CmdId: 3983
     * Obf: MKMLOPMNMBP
     * </pre>
     *
     * Protobuf type {@code HitTreeNotify}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:HitTreeNotify)
        HitTreeNotifyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return HitTreeNotifyOuterClass.internal_static_HitTreeNotify_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return HitTreeNotifyOuterClass.internal_static_HitTreeNotify_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                HitTreeNotify.class, Builder.class);
      }

      // Construct using emu.grasscutter.net.proto.HitTreeNotifyOuterClass.HitTreeNotify.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        if (treePosBuilder_ == null) {
          treePos_ = null;
        } else {
          treePos_ = null;
          treePosBuilder_ = null;
        }
        if (dropPosBuilder_ == null) {
          dropPos_ = null;
        } else {
          dropPos_ = null;
          dropPosBuilder_ = null;
        }
        treeType_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return HitTreeNotifyOuterClass.internal_static_HitTreeNotify_descriptor;
      }

      @Override
      public HitTreeNotify getDefaultInstanceForType() {
        return HitTreeNotify.getDefaultInstance();
      }

      @Override
      public HitTreeNotify build() {
        HitTreeNotify result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public HitTreeNotify buildPartial() {
        HitTreeNotify result = new HitTreeNotify(this);
        if (treePosBuilder_ == null) {
          result.treePos_ = treePos_;
        } else {
          result.treePos_ = treePosBuilder_.build();
        }
        if (dropPosBuilder_ == null) {
          result.dropPos_ = dropPos_;
        } else {
          result.dropPos_ = dropPosBuilder_.build();
        }
        result.treeType_ = treeType_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof HitTreeNotify) {
          return mergeFrom((HitTreeNotify)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(HitTreeNotify other) {
        if (other == HitTreeNotify.getDefaultInstance()) return this;
        if (other.hasTreePos()) {
          mergeTreePos(other.getTreePos());
        }
        if (other.hasDropPos()) {
          mergeDropPos(other.getDropPos());
        }
        if (other.getTreeType() != 0) {
          setTreeType(other.getTreeType());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        HitTreeNotify parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (HitTreeNotify) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private VectorOuterClass.Vector treePos_;
      private com.google.protobuf.SingleFieldBuilderV3<
          VectorOuterClass.Vector, VectorOuterClass.Vector.Builder, VectorOuterClass.VectorOrBuilder> treePosBuilder_;
      /**
       * <code>.Vector tree_pos = 10;</code>
       * @return Whether the treePos field is set.
       */
      public boolean hasTreePos() {
        return treePosBuilder_ != null || treePos_ != null;
      }
      /**
       * <code>.Vector tree_pos = 10;</code>
       * @return The treePos.
       */
      public VectorOuterClass.Vector getTreePos() {
        if (treePosBuilder_ == null) {
          return treePos_ == null ? VectorOuterClass.Vector.getDefaultInstance() : treePos_;
        } else {
          return treePosBuilder_.getMessage();
        }
      }
      /**
       * <code>.Vector tree_pos = 10;</code>
       */
      public Builder setTreePos(VectorOuterClass.Vector value) {
        if (treePosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          treePos_ = value;
          onChanged();
        } else {
          treePosBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.Vector tree_pos = 10;</code>
       */
      public Builder setTreePos(
          VectorOuterClass.Vector.Builder builderForValue) {
        if (treePosBuilder_ == null) {
          treePos_ = builderForValue.build();
          onChanged();
        } else {
          treePosBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.Vector tree_pos = 10;</code>
       */
      public Builder mergeTreePos(VectorOuterClass.Vector value) {
        if (treePosBuilder_ == null) {
          if (treePos_ != null) {
            treePos_ =
              VectorOuterClass.Vector.newBuilder(treePos_).mergeFrom(value).buildPartial();
          } else {
            treePos_ = value;
          }
          onChanged();
        } else {
          treePosBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.Vector tree_pos = 10;</code>
       */
      public Builder clearTreePos() {
        if (treePosBuilder_ == null) {
          treePos_ = null;
          onChanged();
        } else {
          treePos_ = null;
          treePosBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.Vector tree_pos = 10;</code>
       */
      public VectorOuterClass.Vector.Builder getTreePosBuilder() {

        onChanged();
        return getTreePosFieldBuilder().getBuilder();
      }
      /**
       * <code>.Vector tree_pos = 10;</code>
       */
      public VectorOuterClass.VectorOrBuilder getTreePosOrBuilder() {
        if (treePosBuilder_ != null) {
          return treePosBuilder_.getMessageOrBuilder();
        } else {
          return treePos_ == null ?
              VectorOuterClass.Vector.getDefaultInstance() : treePos_;
        }
      }
      /**
       * <code>.Vector tree_pos = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          VectorOuterClass.Vector, VectorOuterClass.Vector.Builder, VectorOuterClass.VectorOrBuilder>
          getTreePosFieldBuilder() {
        if (treePosBuilder_ == null) {
          treePosBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              VectorOuterClass.Vector, VectorOuterClass.Vector.Builder, VectorOuterClass.VectorOrBuilder>(
                  getTreePos(),
                  getParentForChildren(),
                  isClean());
          treePos_ = null;
        }
        return treePosBuilder_;
      }

      private VectorOuterClass.Vector dropPos_;
      private com.google.protobuf.SingleFieldBuilderV3<
          VectorOuterClass.Vector, VectorOuterClass.Vector.Builder, VectorOuterClass.VectorOrBuilder> dropPosBuilder_;
      /**
       * <code>.Vector drop_pos = 12;</code>
       * @return Whether the dropPos field is set.
       */
      public boolean hasDropPos() {
        return dropPosBuilder_ != null || dropPos_ != null;
      }
      /**
       * <code>.Vector drop_pos = 12;</code>
       * @return The dropPos.
       */
      public VectorOuterClass.Vector getDropPos() {
        if (dropPosBuilder_ == null) {
          return dropPos_ == null ? VectorOuterClass.Vector.getDefaultInstance() : dropPos_;
        } else {
          return dropPosBuilder_.getMessage();
        }
      }
      /**
       * <code>.Vector drop_pos = 12;</code>
       */
      public Builder setDropPos(VectorOuterClass.Vector value) {
        if (dropPosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dropPos_ = value;
          onChanged();
        } else {
          dropPosBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.Vector drop_pos = 12;</code>
       */
      public Builder setDropPos(
          VectorOuterClass.Vector.Builder builderForValue) {
        if (dropPosBuilder_ == null) {
          dropPos_ = builderForValue.build();
          onChanged();
        } else {
          dropPosBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.Vector drop_pos = 12;</code>
       */
      public Builder mergeDropPos(VectorOuterClass.Vector value) {
        if (dropPosBuilder_ == null) {
          if (dropPos_ != null) {
            dropPos_ =
              VectorOuterClass.Vector.newBuilder(dropPos_).mergeFrom(value).buildPartial();
          } else {
            dropPos_ = value;
          }
          onChanged();
        } else {
          dropPosBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.Vector drop_pos = 12;</code>
       */
      public Builder clearDropPos() {
        if (dropPosBuilder_ == null) {
          dropPos_ = null;
          onChanged();
        } else {
          dropPos_ = null;
          dropPosBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.Vector drop_pos = 12;</code>
       */
      public VectorOuterClass.Vector.Builder getDropPosBuilder() {

        onChanged();
        return getDropPosFieldBuilder().getBuilder();
      }
      /**
       * <code>.Vector drop_pos = 12;</code>
       */
      public VectorOuterClass.VectorOrBuilder getDropPosOrBuilder() {
        if (dropPosBuilder_ != null) {
          return dropPosBuilder_.getMessageOrBuilder();
        } else {
          return dropPos_ == null ?
              VectorOuterClass.Vector.getDefaultInstance() : dropPos_;
        }
      }
      /**
       * <code>.Vector drop_pos = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          VectorOuterClass.Vector, VectorOuterClass.Vector.Builder, VectorOuterClass.VectorOrBuilder>
          getDropPosFieldBuilder() {
        if (dropPosBuilder_ == null) {
          dropPosBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              VectorOuterClass.Vector, VectorOuterClass.Vector.Builder, VectorOuterClass.VectorOrBuilder>(
                  getDropPos(),
                  getParentForChildren(),
                  isClean());
          dropPos_ = null;
        }
        return dropPosBuilder_;
      }

      private int treeType_ ;
      /**
       * <code>uint32 tree_type = 4;</code>
       * @return The treeType.
       */
      @Override
      public int getTreeType() {
        return treeType_;
      }
      /**
       * <code>uint32 tree_type = 4;</code>
       * @param value The treeType to set.
       * @return This builder for chaining.
       */
      public Builder setTreeType(int value) {

        treeType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 tree_type = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearTreeType() {

        treeType_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:HitTreeNotify)
    }

    // @@protoc_insertion_point(class_scope:HitTreeNotify)
    private static final HitTreeNotify DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new HitTreeNotify();
    }

    public static HitTreeNotify getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HitTreeNotify>
        PARSER = new com.google.protobuf.AbstractParser<HitTreeNotify>() {
      @Override
      public HitTreeNotify parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HitTreeNotify(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HitTreeNotify> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<HitTreeNotify> getParserForType() {
      return PARSER;
    }

    @Override
    public HitTreeNotify getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_HitTreeNotify_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_HitTreeNotify_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\023HitTreeNotify.proto\032\014Vector.proto\"X\n\rH" +
      "itTreeNotify\022\031\n\010tree_pos\030\n \001(\0132\007.Vector\022" +
      "\031\n\010drop_pos\030\014 \001(\0132\007.Vector\022\021\n\ttree_type\030" +
      "\004 \001(\rB\033\n\031emu.grasscutter.net.protob\006prot" +
      "o3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          VectorOuterClass.getDescriptor(),
        });
    internal_static_HitTreeNotify_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_HitTreeNotify_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_HitTreeNotify_descriptor,
        new String[] { "TreePos", "DropPos", "TreeType", });
    VectorOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
